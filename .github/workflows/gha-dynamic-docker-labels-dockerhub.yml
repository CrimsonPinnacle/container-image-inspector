# This workflow will build and push a new container image to DockerHub. During the build
# of the image the committer's GitHub handle, the commit SHA, and a link to the Dockerfile will be added
# as labels to the image.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create a repository in DockerHub to store your container images. 
#
# 2. Store your DockerHub credentials (username and access token) in GitHub Actions secrets named `DOCKER_HUB_USERNAME` and `DOCKER_HUB_ACCESS_TOKEN`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 3. Store your DockerHub repository name in GitHub Actions secret named `DOCKER_HUB_REPONAME`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Create a pull request or push to a development branch. 
#

name: Dynamic Docker Labels - DockerHub

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:

    # Builds the URL to the Dockerfile used to build the image
    - name: 'Set environment variable for Dockerfile URL'
      run: echo "DOCKERFILE_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/${GITHUB_REF#refs/heads/}/samples/dynamic-labels/Dockerfile" >> $GITHUB_ENV

    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./samples/dynamic-labels/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_REPONAME }}:build-${{ github.run_number }}
        build-args: |
          IMAGE_COMMITTER=${{ github.actor }}
          IMAGE_DOCKERFILE=${{ env.DOCKERFILE_URL }}
          IMAGE_COMMIT_SHA=${{ github.sha }}

    - name: Output image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
